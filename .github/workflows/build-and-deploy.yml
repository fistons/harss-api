name: Build

on:
  push:
    tags:
      - 'v*'

jobs:
  set-vars:
    name: Build docker tag
    runs-on: ubuntu-latest
    outputs:
      version_dashed: ${{ steps.vars.outputs.version_dashed }}
    steps:
      - name: set values
        id: vars
        run: |
          echo "version_dashed=${GITHUB_REF#refs/tags/}" | tr . - >> $GITHUB_OUTPUT
  build:
    strategy:
      matrix:
        include:
          - arch: "x86_64-unknown-linux-gnu"
            docker-arch: "amd64"
          - arch: "aarch64-unknown-linux-gnu"
            docker-arch: "arm64"
          - arch: "armv7-unknown-linux-gnueabihf"
            docker-arch: "arm"
    name: Build binary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.arch }}
          override: true
      - uses: actions-rs/cargo@v1
        env:
          SQLX_OFFLINE: true
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.arch }}
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.docker-arch }}
          path: |
            target/${{ matrix.arch }}/release/rss-aggregator
  docker:
    name: Build docker images
    runs-on: ubuntu-latest
    needs: [ build, set-vars ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: rg.nl-ams.scw.cloud/pedr0
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push API docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: |
            rg.nl-ams.scw.cloud/pedr0/rss-aggregator-api:latest
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - uses: actions/download-artifact@v3
      - name: Rename files
        run: |
          for i in $(ls -d */ | sed 's#/##')
          do
            mv $i/fetcher fetcher-$i
            mv $i/rss-aggregator rss-aggregator-$i
          done
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
          files: |
            fetcher-*
            rss-aggregator-*
