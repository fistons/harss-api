services:
  api:
    image: rg.nl-ams.scw.cloud/pedr0/rss-aggregator-api:latest
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "8080:8080"
    links:
      - redis
      - postgres
      - jaeger
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-changeme}@postgres/rss-aggregator
      JWT_SECRET: 6ce319be-880a-419f-a39e-0058bceec28a
      PASSWORD_SALT: fd364f91-1fbb-41f2-8d90-33c7231e3cfa
      RSS_AGGREGATOR_ALLOW_ACCOUNT_CREATION: false
      REDIS_URL: redis://redis
      POLLING_INTERVAL: 300
      JAEGER_ENABLED: true
      OTEL_EXPORTER_JAEGER_AGENT_HOST: jaeger
      OTEL_EXPORTER_JAEGER_AGENT_PORT: 6831
      RUST_LOG: info
      DD_AGENT: http://host.docker.internal:8186
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      jaeger:
        condition: service_started
    healthcheck: 
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
  fetcher:
    image: rg.nl-ams.scw.cloud/pedr0/rss-aggregator-fetcher:latest
    links:
      - postgres
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-changeme}@postgres/rss-aggregator
      RUST_LOG: info
    depends_on:
      postgres:
        condition: service_healthy
  redis:
    image: redis:alpine
  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_DB: rss-aggregator
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
      - database:/data/postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}" ]
      interval: 5s
      timeout: 5s
      retries: 5
  migration:
    image: clux/diesel-cli
    command: diesel migration run
    volumes:
     - "$PWD:/volume"
    links:
      - postgres
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-changeme}@postgres/rss-aggregator
    working_dir: /volume
    depends_on:
      postgres:
        condition: service_healthy
  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - 16686:16686 # Expose Web UI
volumes:
  database: {}
